오셀로 격투 게임 PRD (Product Requirements Document)

1. 개요
- 목표: 오셀로 게임에 격투 요소와 캐릭터 선택, 다양한 게임 모드를 결합한 새로운 형태의 캐주얼 게임을 PC(Windows) 플랫폼에 출시한다.
- 타깃 유저: 오셀로, 보드게임, 대전 게임을 좋아하는 10~30대 남녀, 친구/가족과 함께 즐기고 싶은 유저, 캐릭터 수집 및 성장 요소에 흥미를 느끼는 유저

2. 주요 기능 및 요구 사항
2.1. 메인 화면
- 시작하기, 설정하기 두 개의 버튼이 중앙에 배치
- 랜덤/선택된 캐릭터 이미지가 메인에 노출
- 배경화면(애니메이션/정적 이미지) 적용
- 게임 타이틀 및 간단한 설명 표시

2.2. 캐릭터 선택 화면
- 1P(플레이어) 캐릭터 선택 UI 제공
- 1P 선택 완료 시 CPU(또는 2P) 캐릭터 선택 UI 활성화
- 각 캐릭터의 미리보기(애니메이션/정적 이미지) 제공
- 선택 정보(캐릭터 ID, 이름, 능력치 등) 저장

2.3. 설정 화면
- 볼륨(배경음, 효과음) 조절 슬라이더
- 난이도(쉬움/보통/어려움) 선택
- 기타 설정(전체화면, 언어 등) 추가 가능
- 설정값 저장 및 불러오기(로컬 저장소 활용)

2.4. 게임 화면
- 상단 1/4 영역에 검정색 바 UI
- 오셀로 보드(8x8) 및 게임 로직 연동
- 최상단 5등분 레이아웃: 2/5 위치에 1P 체력바, 4/5 위치에 CPU 체력바
- 선택한 캐릭터의 격투 애니메이션(공격/피격/대기 등) 표시
- 오셀로 결과에 따라 체력바 실시간 연동(돌을 뒤집을 때마다 데미지)
- 승패 결과 및 리플레이/다시하기/메인으로 버튼 제공

2.5. 씬 전환 및 데이터 전달
- 메인 → 캐릭터 선택 → 게임 → 결과 → 메인 흐름
- 씬 간 캐릭터, 설정, 게임 결과 등 데이터 전달 구조 설계
- 씬 전환 시 로딩 애니메이션/효과 제공

2.6. UI/UX
- 각 화면별 UI/UX 일관성 유지
- 버튼, 슬라이더, 체력바 등 인터랙션 애니메이션 적용
- 키보드/마우스 조작 지원
- 접근성(색약 모드, 폰트 크기 등) 고려

2.7. 게임 모드
- 1P vs CPU: 플레이어와 AI 대전
- 1P vs 2P: 같은 PC에서 2인 플레이
- CPU vs CPU: AI끼리 대전(관전 모드)
- (추후) 온라인 멀티플레이어: 계정, 랭킹, 매칭, 친구, 리플레이 등

2.8. 데이터 및 저장
- 로컬 저장소에 설정, 캐릭터 선택, 게임 기록 저장
- (추후) 서버 연동: 계정, 랭킹, 리플레이, 매칭 등

3. 비즈니스/운영 요구 사항
- 무료 플레이, 광고/인앱 결제(추후)
- 개인정보 처리방침, 이용약관 제공
- 버그 리포트 및 피드백 채널 운영

4. 개발 및 출시 일정(예시)
1. 기획/디자인: 2주
2. 기본 시스템/씬 분리: 1주
3. 메인/캐릭터/설정/게임 화면 UI 및 로직: 3주
4. 게임 로직/애니메이션/체력바 연동: 2주
5. 테스트/QA/버그 수정: 2주
6. 출시 준비(스토어 등록, 마케팅 등): 1주

5. QA 및 테스트
- 각 기능별 단위 테스트, 통합 테스트
- 전체 흐름 시나리오 테스트
- UI/UX 피드백 반영
- 크래시/버그 리포트 시스템 구축

6. 향후 확장 계획
- 온라인 멀티플레이어, 계정/랭킹 시스템
- 신규 캐릭터/스킨/맵 추가
- 모바일/콘솔 플랫폼 확장

7. 기타 참고 사항
- 모든 텍스트는 다국어(한국어/영어) 지원 구조로 개발
- 오픈소스 라이선스, 저작권 문제 사전 검토 

---

# 상세 기능 명세서

## 1. 메인 화면
- 시작하기, 설정하기 버튼 UI는 Canvas 내 중앙에 배치 (Button 컴포넌트 활용)
- 캐릭터 이미지: Image 컴포넌트로 랜덤/선택 캐릭터 표시
- 배경화면: Image 또는 애니메이션 적용
- 게임 타이틀: TextMeshPro 등으로 상단에 노출
- 참고 영상: [How to make UI in UNITY - EASY TUTORIAL](https://www.youtube.com/watch?v=_RIsfVOqTaE)

## 2. 캐릭터 선택 화면
- 1P 캐릭터 선택: 좌우 화살표/리스트/그리드 등으로 캐릭터 선택 UI 구현
- 1P 선택 후 CPU(또는 2P) 캐릭터 선택 UI 활성화
- 캐릭터 미리보기: 선택 시 애니메이션/이미지 갱신
- 선택 정보(캐릭터 ID, 이름, 능력치 등) ScriptableObject 또는 클래스에 저장
- 참고 영상: [Character Selector in Unity](https://www.youtube.com/watch?v=dwjs378rFIQ), [Character Selection Screen - Unity Tutorial - 2019](https://www.youtube.com/watch?v=hZdPs1e9bz0)

## 3. 설정 화면
- 볼륨 조절: Slider 컴포넌트로 BGM/효과음 볼륨 조절, AudioMixer 연동
- 난이도: Dropdown/Toggle로 선택, Enum 등으로 관리
- 기타 설정: 전체화면, 언어 등 Toggle/Dropdown 추가
- 설정값 저장: PlayerPrefs 등 로컬 저장소 활용
- 참고 영상: [Creating an Event Driven UI | TDD in Unity](https://www.youtube.com/watch?v=LPlH87XaWC8)

## 4. 게임 화면
- 상단 1/4 검정색 바: Panel/Image로 UI 배치
- 오셀로 보드: 8x8 GridLayout, BoardManager.cs 참고
- 체력바: Slider/Image로 2/5, 4/5 위치에 배치
- 캐릭터 격투 애니메이션: Animator/Animation Controller 활용
- 오셀로 결과와 체력바 연동: 돌 뒤집을 때마다 체력 감소, GameManager.cs 참고
- 승패 결과, 리플레이/다시하기/메인으로 버튼 제공
- 참고 영상: [Unity Roguelike Tutorial : Part 7 - Creating the Interface (UI)](https://www.youtube.com/watch?v=hpMDh75QM-U)

## 5. 씬 전환 및 데이터 전달
- 씬 전환: SceneManager.LoadScene 사용
- 데이터 전달: DontDestroyOnLoad, Singleton, ScriptableObject, PlayerPrefs 등 활용
- 로딩 애니메이션: 별도 Canvas/Panel로 구현
- 참고 영상: [Unity Tutorial: Preserving Data between Scene Loading/Switching](https://www.youtube.com/watch?v=WchH-JCwVI8), [THIS Is The Secret to Seamless Unity Scene Transitions!](https://www.youtube.com/watch?v=_9L0HJrVR5Y)

## 6. UI/UX
- 각 화면별 UI/UX 일관성, 폰트/컬러/버튼 스타일 통일
- 버튼/슬라이더/체력바 등 인터랙션 애니메이션 적용
- 키보드/마우스 조작 지원, 접근성 고려
- 참고 영상: [Canvas and UI Elements EPISODE 11 || Unity Game Development For Complete Beginners Series](https://www.youtube.com/watch?v=i7EbOjKU5PQ)

## 7. 게임 모드
- 1P vs CPU: GameManager에서 AI 로직 분기
- 1P vs 2P: 입력 분기, 턴 관리
- CPU vs CPU: AI끼리 자동 진행
- (추후) 온라인: 계정/랭킹/매칭/친구/리플레이 등 서버 연동 구조 설계

## 8. 데이터 및 저장
- PlayerPrefs, JSON, ScriptableObject 등으로 로컬 저장
- (추후) 서버 연동: REST API, DB 등

---

# 참고할 수 있는 유니티 영상 모음

- 오셀로/보드게임 UI 구현: [Unity Roguelike Tutorial : Part 7 - Creating the Interface (UI)](https://www.youtube.com/watch?v=hpMDh75QM-U)
- 캐릭터 선택 화면: [Character Selector in Unity](https://www.youtube.com/watch?v=dwjs378rFIQ), [Character Selection Screen - Unity Tutorial - 2019](https://www.youtube.com/watch?v=hZdPs1e9bz0)
- 씬 전환 및 데이터 전달: [Unity Tutorial: Preserving Data between Scene Loading/Switching](https://www.youtube.com/watch?v=WchH-JCwVI8), [THIS Is The Secret to Seamless Unity Scene Transitions!](https://www.youtube.com/watch?v=_9L0HJrVR5Y)
- 기본 UI/Canvas: [How to make UI in UNITY - EASY TUTORIAL](https://www.youtube.com/watch?v=_RIsfVOqTaE), [Canvas and UI Elements EPISODE 11](https://www.youtube.com/watch?v=i7EbOjKU5PQ)
- 이벤트 기반 UI: [Creating an Event Driven UI | TDD in Unity](https://www.youtube.com/watch?v=LPlH87XaWC8) 